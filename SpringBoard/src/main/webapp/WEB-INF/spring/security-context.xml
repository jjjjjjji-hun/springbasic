<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	<bean id="customAccessDenied" class="com.ict.security.CustomAccessDeniedHandler"/>
	<bean id="customLoginSuccess" class="com.ict.security.CustomLoginSuccessHandler"/>
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	<bean id="customUserDetailsService" class="com.ict.security.CustomUserDetailsService"/>
	<security:http>
		
		<security:form-login login-page="/customLogin"
			authentication-success-handler-ref="customLoginSuccess"/>
		
		<!-- <security:access-denied-handler error-page="/accessError"/> -->
		<security:access-denied-handler ref="customAccessDenied"/>
		
		<security:logout logout-url="/customLogout" invalidate-session="true"
				delete-cookies="remember-me, JSESSIONID"/>
		
		<security:remember-me data-source-ref="dataSource" token-validity-seconds="604800"/>
	</security:http>
	
	<security:authentication-manager>
		<!-- 암호화 모듈(password-encoder) 넣기 위해 먼저 선언해야 하는 태그 provider -->
		<security:authentication-provider user-service-ref="customUserDetailsService">
			
			<security:password-encoder ref="bcryptPasswordEncoder"/>
											
		</security:authentication-provider>
	</security:authentication-manager>
</beans>
